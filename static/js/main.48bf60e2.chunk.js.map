{"version":3,"sources":["components/TrafficLight.js","hooks/useTraffic.js","components/App.js","index.js"],"names":["flash","keyframes","Person","className","d","Container","styled","svg","AmberLight","circle","traffic","css","RedMan","show","GreenMan","pedestrians","PedestrianButton","TrafficLight","wait","onWaitClick","viewBox","xmlns","x","y","width","height","fill","cx","cy","r","opacity","fontSize","onClick","sendAction","actions","send","cancel","getTrafficState","state","value","getWaitState","getPedestrianState","pedestrian","sendTrafficTimerAfterDelay","delay","id","cancelTimer","pedestrianNotGreen","_context","_event","meta","waitIsLit","App","lightMachine","Machine","type","states","initial","unlit","on","ENABLE_WAIT","target","cond","lit","DISABLE_WAIT","red","entry","PEDESTRIAN_GREEN","green","PEDESTRIAN_FLASH","flashGreen","PEDESTRIAN_RED","TRAFFIC_TIMER","CANCEL","amber","flashAmber","useMachine","enableWait","useTraffic","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48bf60e2.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nimport { keyframes, css } from '@emotion/react';\n\nconst flash = keyframes`\n  0% {\n    opacity: 0.2;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0.2;\n  }\n`;\n\nconst Person = ({ className }) => (\n  <path\n    className={className}\n    d=\"m615.7 377.5c0 20.5-16.6 37.1-37.1 37.1-20.5 0-37.1-16.6-37.1-37.1 0-20.5 16.6-37.1 37.1-37.1 20.5 0 37.1 16.6 37.1 37.1zM516.4 490.4s-30.3 157.5-36.9 168.2c-5.6 9.1-49.2 80.6-49.2 80.6-9.3 15.3-0.5 26.2 9.4 31.9 8.4 4.8 26.4 3.6 32.4-6.5 0 0 48.4-75.3 53.6-91.5 3.7-11.2 12.1-57.9 12.1-57.9s47 48.5 52.1 57.1c6.5 10.9 18.6 87.1 18.6 87.1 2.9 13.6 15.8 18 29.3 15.7 10.6-1.8 21.8-9 19.3-22.1 0 0-10.7-88.4-19.3-102.9-10.2-17.3-65-76.4-65-76.4l15.7-70s10.1 20.4 17.1 29.3c8 10.1 58.6 39.3 58.6 39.3 4.6 3.1 15.1 1.4 19.3-6.4 3.3-6.3 3.2-16.5-4.3-21.4 0 0-41.7-26.2-51.4-34.3-10.9-9-32.9-69.3-32.9-69.3-6.8-9.4-16.2-19.7-32.1-20-16.1-0.3-24.2 8.6-31.4 13.6 0 0-61.7 45.1-67.9 54.3-6.1 9.2-17.1 78.6-17.1 78.6-1.7 7.9 1.4 14.3 10.7 16.4 11.4 2.7 19.6-4.5 20.7-10 0 0 7.1-54.8 12.1-62.9 5.9-9.4 26.3-20.5 26.3-20.5z\"\n  />\n);\n\nconst Container = styled.svg`\n  height: 800px;\n`;\n\nconst AmberLight = styled.circle`\n  opacity: 0.2;\n  ${({ traffic }) => traffic === 'amber' && 'opacity: 1'};\n  ${({ traffic }) => traffic === 'flashAmber' && css`animation: ${flash} 0.6s ease infinite;`};\n`;\n\nconst RedMan = styled(Person)`\n  transform: scale(0.1) translate(-220%, 400%);\n  fill: red;\n  opacity: ${({ show }) => (show ? 1 : 0.2)};\n`;\n\nconst GreenMan = styled(Person)`\n  transform: scale(0.1) translate(150%, 400%);\n  fill: green;\n  opacity: 0.2;\n  ${({ pedestrians }) => pedestrians === 'green' && 'opacity: 1'};\n  ${({ pedestrians }) => pedestrians === 'flashGreen' && css`animation: ${flash} 0.6s ease infinite;`};\n`;\n\nconst PedestrianButton = styled.circle`\n  cursor: pointer;\n`;\n\nfunction TrafficLight({ traffic, pedestrians, wait, onWaitClick }) {\n  return (\n    <Container viewBox=\"0 0 100 680\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect x=\"0\" y=\"0\" width=\"100\" height=\"280\" fill=\"black\" />\n\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"40\"\n        fill=\"red\"\n        opacity={traffic === 'red' ? 1 : 0.2}\n      />\n      <AmberLight\n        cx=\"50\"\n        cy=\"140\"\n        r=\"40\"\n        fill=\"gold\"\n        traffic={traffic}\n      />\n      <circle\n        cx=\"50\"\n        cy=\"230\"\n        r=\"40\"\n        fill=\"green\"\n        opacity={traffic === 'green' ? 1 : 0.2}\n      />\n\n      <rect x=\"40\" y=\"280\" width=\"20\" height=\"300\" fill=\"darkgray\" />\n\n      <rect x=\"10\" y=\"300\" width=\"80\" height=\"120\" fill=\"gray\" />\n      <text x=\"12\" y=\"380\" fill=\"gold\" fontSize=\"30\" opacity={wait === 'lit' ? 1 : 0.2}>\n        WAIT\n      </text>\n      <PedestrianButton\n        cx=\"50\"\n        cy=\"400\"\n        r=\"15\"\n        fill=\"black\"\n        onClick={onWaitClick}\n      />\n      <RedMan show={pedestrians === 'red'} />\n      <GreenMan pedestrians={pedestrians} />\n    </Container>\n  );\n}\n\nexport default TrafficLight;\n","import { useMachine } from '@xstate/react';\nimport { Machine, actions } from 'xstate';\n\nconst { send: sendAction, cancel } = actions;\n\nconst getTrafficState = (state) => state.value.traffic;\nconst getWaitState = (state) => state.value.wait;\nconst getPedestrianState = (state) => state.value.pedestrian;\n\nconst sendTrafficTimerAfterDelay = (delay, id) =>\n  sendAction('TRAFFIC_TIMER', {\n    delay,\n    id,\n  });\n\nconst cancelTimer = (id) => cancel(id);\n\nconst pedestrianNotGreen = (_context, _event, meta) =>\n  getPedestrianState(meta.state) !== 'green';\n\nconst waitIsLit = (_context, _event, meta) =>\n  getWaitState(meta.state) === 'lit';\n\nexport default function useTraffic() {\n  const lightMachine = Machine({\n    type: 'parallel',\n    id: 'lightMachine',\n    states: {\n      wait: {\n        initial: 'unlit',\n        states: {\n          unlit: {\n            on: {\n              ENABLE_WAIT: [\n                {\n                  target: 'lit',\n                  cond: pedestrianNotGreen,\n                },\n              ],\n            },\n          },\n          lit: {\n            on: {\n              DISABLE_WAIT: 'unlit',\n            },\n          },\n        },\n      },\n      pedestrian: {\n        initial: 'red',\n        states: {\n          red: {\n            entry: sendAction('DISABLE_WAIT'),\n            on: {\n              PEDESTRIAN_GREEN: [\n                {\n                  target: 'green',\n                  cond: waitIsLit,\n                },\n              ],\n            },\n          },\n          green: {\n            entry: sendAction('DISABLE_WAIT'),\n            on: {\n              PEDESTRIAN_FLASH: 'flashGreen',\n            },\n          },\n          flashGreen: {\n            on: {\n              PEDESTRIAN_RED: 'red',\n            },\n          },\n        },\n      },\n      traffic: {\n        initial: 'green',\n        states: {\n          green: {\n            entry: [\n              sendTrafficTimerAfterDelay(5000, 'greenToAmberTimer'),\n              sendAction('PEDESTRIAN_RED'),\n            ],\n            on: {\n              TRAFFIC_TIMER: 'amber',\n              CANCEL: { actions: cancelTimer('greenToAmberTimer') },\n            },\n          },\n          amber: {\n            entry: [sendTrafficTimerAfterDelay(2000, 'amberToRedTimer')],\n            on: {\n              TRAFFIC_TIMER: 'red',\n              CANCEL: { actions: cancelTimer('amberToRedTimer') },\n            },\n          },\n          red: {\n            entry: [\n              sendTrafficTimerAfterDelay(4000, 'redToFlashAmberTimer'),\n              sendAction('PEDESTRIAN_GREEN'),\n            ],\n            on: {\n              TRAFFIC_TIMER: 'flashAmber',\n              CANCEL: { actions: cancelTimer('redToFlashAmberTimer') },\n            },\n          },\n          flashAmber: {\n            entry: [\n              sendTrafficTimerAfterDelay(2000, 'flashAmberToGreenTimer'),\n              sendAction('PEDESTRIAN_FLASH'),\n            ],\n            on: {\n              TRAFFIC_TIMER: 'green',\n              CANCEL: { actions: cancelTimer('flashAmberToGreenTimer') },\n            },\n          },\n        },\n      },\n    },\n  });\n\n  const [state, send] = useMachine(lightMachine);\n\n  return {\n    state: {\n      traffic: getTrafficState(state),\n      wait: getWaitState(state),\n      pedestrian: getPedestrianState(state),\n    },\n    actions: {\n      enableWait: () => send('ENABLE_WAIT'),\n    },\n  };\n}\n","import TrafficLight from './TrafficLight';\nimport useTraffic from '../hooks/useTraffic';\n\nfunction App() {\n  const { state, actions } = useTraffic();\n\n  return (\n    <TrafficLight\n      traffic={state.traffic}\n      wait={state.wait}\n      pedestrians={state.pedestrian}\n      onWaitClick={actions.enableWait}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}